//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace amco {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("amcoDBDataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class amcoDBDataSet2 : global::System.Data.DataSet {
        
        private invoice_orderDataTable tableinvoice_order;
        
        private invoice_order_itemDataTable tableinvoice_order_item;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public amcoDBDataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected amcoDBDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["invoice_order"] != null)) {
                    base.Tables.Add(new invoice_orderDataTable(ds.Tables["invoice_order"]));
                }
                if ((ds.Tables["invoice_order_item"] != null)) {
                    base.Tables.Add(new invoice_order_itemDataTable(ds.Tables["invoice_order_item"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public invoice_orderDataTable invoice_order {
            get {
                return this.tableinvoice_order;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public invoice_order_itemDataTable invoice_order_item {
            get {
                return this.tableinvoice_order_item;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            amcoDBDataSet2 cln = ((amcoDBDataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["invoice_order"] != null)) {
                    base.Tables.Add(new invoice_orderDataTable(ds.Tables["invoice_order"]));
                }
                if ((ds.Tables["invoice_order_item"] != null)) {
                    base.Tables.Add(new invoice_order_itemDataTable(ds.Tables["invoice_order_item"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableinvoice_order = ((invoice_orderDataTable)(base.Tables["invoice_order"]));
            if ((initTable == true)) {
                if ((this.tableinvoice_order != null)) {
                    this.tableinvoice_order.InitVars();
                }
            }
            this.tableinvoice_order_item = ((invoice_order_itemDataTable)(base.Tables["invoice_order_item"]));
            if ((initTable == true)) {
                if ((this.tableinvoice_order_item != null)) {
                    this.tableinvoice_order_item.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "amcoDBDataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/amcoDBDataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableinvoice_order = new invoice_orderDataTable();
            base.Tables.Add(this.tableinvoice_order);
            this.tableinvoice_order_item = new invoice_order_itemDataTable();
            base.Tables.Add(this.tableinvoice_order_item);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeinvoice_order() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeinvoice_order_item() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            amcoDBDataSet2 ds = new amcoDBDataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void invoice_orderRowChangeEventHandler(object sender, invoice_orderRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void invoice_order_itemRowChangeEventHandler(object sender, invoice_order_itemRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class invoice_orderDataTable : global::System.Data.TypedTableBase<invoice_orderRow> {
            
            private global::System.Data.DataColumn columnorder_id;
            
            private global::System.Data.DataColumn columnorder_date;
            
            private global::System.Data.DataColumn columnorder_receiver_name;
            
            private global::System.Data.DataColumn columnorder_receiver_address;
            
            private global::System.Data.DataColumn columnorder_total_before_levy;
            
            private global::System.Data.DataColumn columnorder_total_levy;
            
            private global::System.Data.DataColumn columnorder_levy_per;
            
            private global::System.Data.DataColumn columnorder_total_after_levy;
            
            private global::System.Data.DataColumn columnorder_vat;
            
            private global::System.Data.DataColumn columnorder_total_after_VAT;
            
            private global::System.Data.DataColumn columnorder_amount_paid;
            
            private global::System.Data.DataColumn columnorder_total_amount_due;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_orderDataTable() {
                this.TableName = "invoice_order";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal invoice_orderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected invoice_orderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_idColumn {
                get {
                    return this.columnorder_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_dateColumn {
                get {
                    return this.columnorder_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_receiver_nameColumn {
                get {
                    return this.columnorder_receiver_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_receiver_addressColumn {
                get {
                    return this.columnorder_receiver_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_before_levyColumn {
                get {
                    return this.columnorder_total_before_levy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_levyColumn {
                get {
                    return this.columnorder_total_levy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_levy_perColumn {
                get {
                    return this.columnorder_levy_per;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_after_levyColumn {
                get {
                    return this.columnorder_total_after_levy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_vatColumn {
                get {
                    return this.columnorder_vat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_after_VATColumn {
                get {
                    return this.columnorder_total_after_VAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_amount_paidColumn {
                get {
                    return this.columnorder_amount_paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_amount_dueColumn {
                get {
                    return this.columnorder_total_amount_due;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_orderRow this[int index] {
                get {
                    return ((invoice_orderRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_orderRowChangeEventHandler invoice_orderRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_orderRowChangeEventHandler invoice_orderRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_orderRowChangeEventHandler invoice_orderRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_orderRowChangeEventHandler invoice_orderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addinvoice_orderRow(invoice_orderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_orderRow Addinvoice_orderRow(string order_date, string order_receiver_name, string order_receiver_address, string order_total_before_levy, string order_total_levy, string order_levy_per, string order_total_after_levy, string order_vat, string order_total_after_VAT, string order_amount_paid, string order_total_amount_due) {
                invoice_orderRow rowinvoice_orderRow = ((invoice_orderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        order_date,
                        order_receiver_name,
                        order_receiver_address,
                        order_total_before_levy,
                        order_total_levy,
                        order_levy_per,
                        order_total_after_levy,
                        order_vat,
                        order_total_after_VAT,
                        order_amount_paid,
                        order_total_amount_due};
                rowinvoice_orderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvoice_orderRow);
                return rowinvoice_orderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_orderRow FindByorder_id(int order_id) {
                return ((invoice_orderRow)(this.Rows.Find(new object[] {
                            order_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                invoice_orderDataTable cln = ((invoice_orderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new invoice_orderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnorder_id = base.Columns["order_id"];
                this.columnorder_date = base.Columns["order_date"];
                this.columnorder_receiver_name = base.Columns["order_receiver_name"];
                this.columnorder_receiver_address = base.Columns["order_receiver_address"];
                this.columnorder_total_before_levy = base.Columns["order_total_before_levy"];
                this.columnorder_total_levy = base.Columns["order_total_levy"];
                this.columnorder_levy_per = base.Columns["order_levy_per"];
                this.columnorder_total_after_levy = base.Columns["order_total_after_levy"];
                this.columnorder_vat = base.Columns["order_vat"];
                this.columnorder_total_after_VAT = base.Columns["order_total_after_VAT"];
                this.columnorder_amount_paid = base.Columns["order_amount_paid"];
                this.columnorder_total_amount_due = base.Columns["order_total_amount_due"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnorder_id = new global::System.Data.DataColumn("order_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_id);
                this.columnorder_date = new global::System.Data.DataColumn("order_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_date);
                this.columnorder_receiver_name = new global::System.Data.DataColumn("order_receiver_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_receiver_name);
                this.columnorder_receiver_address = new global::System.Data.DataColumn("order_receiver_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_receiver_address);
                this.columnorder_total_before_levy = new global::System.Data.DataColumn("order_total_before_levy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_before_levy);
                this.columnorder_total_levy = new global::System.Data.DataColumn("order_total_levy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_levy);
                this.columnorder_levy_per = new global::System.Data.DataColumn("order_levy_per", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_levy_per);
                this.columnorder_total_after_levy = new global::System.Data.DataColumn("order_total_after_levy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_after_levy);
                this.columnorder_vat = new global::System.Data.DataColumn("order_vat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_vat);
                this.columnorder_total_after_VAT = new global::System.Data.DataColumn("order_total_after_VAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_after_VAT);
                this.columnorder_amount_paid = new global::System.Data.DataColumn("order_amount_paid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_amount_paid);
                this.columnorder_total_amount_due = new global::System.Data.DataColumn("order_total_amount_due", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_amount_due);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorder_id}, true));
                this.columnorder_id.AutoIncrement = true;
                this.columnorder_id.AutoIncrementSeed = -1;
                this.columnorder_id.AutoIncrementStep = -1;
                this.columnorder_id.AllowDBNull = false;
                this.columnorder_id.ReadOnly = true;
                this.columnorder_id.Unique = true;
                this.columnorder_date.AllowDBNull = false;
                this.columnorder_date.MaxLength = 50;
                this.columnorder_receiver_name.AllowDBNull = false;
                this.columnorder_receiver_name.MaxLength = 50;
                this.columnorder_receiver_address.AllowDBNull = false;
                this.columnorder_receiver_address.MaxLength = 50;
                this.columnorder_total_before_levy.AllowDBNull = false;
                this.columnorder_total_before_levy.MaxLength = 10;
                this.columnorder_total_levy.AllowDBNull = false;
                this.columnorder_total_levy.MaxLength = 10;
                this.columnorder_levy_per.AllowDBNull = false;
                this.columnorder_levy_per.MaxLength = 10;
                this.columnorder_total_after_levy.AllowDBNull = false;
                this.columnorder_total_after_levy.MaxLength = 10;
                this.columnorder_vat.AllowDBNull = false;
                this.columnorder_vat.MaxLength = 10;
                this.columnorder_total_after_VAT.AllowDBNull = false;
                this.columnorder_total_after_VAT.MaxLength = 10;
                this.columnorder_amount_paid.AllowDBNull = false;
                this.columnorder_amount_paid.MaxLength = 10;
                this.columnorder_total_amount_due.AllowDBNull = false;
                this.columnorder_total_amount_due.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_orderRow Newinvoice_orderRow() {
                return ((invoice_orderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new invoice_orderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(invoice_orderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.invoice_orderRowChanged != null)) {
                    this.invoice_orderRowChanged(this, new invoice_orderRowChangeEvent(((invoice_orderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.invoice_orderRowChanging != null)) {
                    this.invoice_orderRowChanging(this, new invoice_orderRowChangeEvent(((invoice_orderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.invoice_orderRowDeleted != null)) {
                    this.invoice_orderRowDeleted(this, new invoice_orderRowChangeEvent(((invoice_orderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.invoice_orderRowDeleting != null)) {
                    this.invoice_orderRowDeleting(this, new invoice_orderRowChangeEvent(((invoice_orderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removeinvoice_orderRow(invoice_orderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amcoDBDataSet2 ds = new amcoDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "invoice_orderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class invoice_order_itemDataTable : global::System.Data.TypedTableBase<invoice_order_itemRow> {
            
            private global::System.Data.DataColumn columnorder_item_id;
            
            private global::System.Data.DataColumn columnorder_item_code;
            
            private global::System.Data.DataColumn columnorder_item_name;
            
            private global::System.Data.DataColumn columnorder_item_quantity;
            
            private global::System.Data.DataColumn columnorder_item_length;
            
            private global::System.Data.DataColumn columnorder_item_price;
            
            private global::System.Data.DataColumn columnorder_item_final_amount;
            
            private global::System.Data.DataColumn columnorder_date;
            
            private global::System.Data.DataColumn columnorder_receiver_name;
            
            private global::System.Data.DataColumn columnorder_receiver_address;
            
            private global::System.Data.DataColumn columnorder_total_before_levy;
            
            private global::System.Data.DataColumn columnorder_total_levy;
            
            private global::System.Data.DataColumn columnorder_levy_per;
            
            private global::System.Data.DataColumn columnorder_total_after_levy;
            
            private global::System.Data.DataColumn columnorder_vat;
            
            private global::System.Data.DataColumn columnorder_total_after_VAT;
            
            private global::System.Data.DataColumn columnorder_amount_paid;
            
            private global::System.Data.DataColumn columnorder_total_amount_due;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_order_itemDataTable() {
                this.TableName = "invoice_order_item";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal invoice_order_itemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected invoice_order_itemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_item_idColumn {
                get {
                    return this.columnorder_item_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_item_codeColumn {
                get {
                    return this.columnorder_item_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_item_nameColumn {
                get {
                    return this.columnorder_item_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_item_quantityColumn {
                get {
                    return this.columnorder_item_quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_item_lengthColumn {
                get {
                    return this.columnorder_item_length;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_item_priceColumn {
                get {
                    return this.columnorder_item_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_item_final_amountColumn {
                get {
                    return this.columnorder_item_final_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_dateColumn {
                get {
                    return this.columnorder_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_receiver_nameColumn {
                get {
                    return this.columnorder_receiver_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_receiver_addressColumn {
                get {
                    return this.columnorder_receiver_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_before_levyColumn {
                get {
                    return this.columnorder_total_before_levy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_levyColumn {
                get {
                    return this.columnorder_total_levy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_levy_perColumn {
                get {
                    return this.columnorder_levy_per;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_after_levyColumn {
                get {
                    return this.columnorder_total_after_levy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_vatColumn {
                get {
                    return this.columnorder_vat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_after_VATColumn {
                get {
                    return this.columnorder_total_after_VAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_amount_paidColumn {
                get {
                    return this.columnorder_amount_paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn order_total_amount_dueColumn {
                get {
                    return this.columnorder_total_amount_due;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_order_itemRow this[int index] {
                get {
                    return ((invoice_order_itemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_order_itemRowChangeEventHandler invoice_order_itemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_order_itemRowChangeEventHandler invoice_order_itemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_order_itemRowChangeEventHandler invoice_order_itemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event invoice_order_itemRowChangeEventHandler invoice_order_itemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addinvoice_order_itemRow(invoice_order_itemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_order_itemRow Addinvoice_order_itemRow(
                        int order_item_code, 
                        string order_item_name, 
                        int order_item_quantity, 
                        string order_item_length, 
                        string order_item_price, 
                        string order_item_final_amount, 
                        string order_date, 
                        string order_receiver_name, 
                        string order_receiver_address, 
                        string order_total_before_levy, 
                        string order_total_levy, 
                        string order_levy_per, 
                        string order_total_after_levy, 
                        string order_vat, 
                        string order_total_after_VAT, 
                        string order_amount_paid, 
                        string order_total_amount_due) {
                invoice_order_itemRow rowinvoice_order_itemRow = ((invoice_order_itemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        order_item_code,
                        order_item_name,
                        order_item_quantity,
                        order_item_length,
                        order_item_price,
                        order_item_final_amount,
                        order_date,
                        order_receiver_name,
                        order_receiver_address,
                        order_total_before_levy,
                        order_total_levy,
                        order_levy_per,
                        order_total_after_levy,
                        order_vat,
                        order_total_after_VAT,
                        order_amount_paid,
                        order_total_amount_due};
                rowinvoice_order_itemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvoice_order_itemRow);
                return rowinvoice_order_itemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_order_itemRow FindByorder_item_id(int order_item_id) {
                return ((invoice_order_itemRow)(this.Rows.Find(new object[] {
                            order_item_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                invoice_order_itemDataTable cln = ((invoice_order_itemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new invoice_order_itemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnorder_item_id = base.Columns["order_item_id"];
                this.columnorder_item_code = base.Columns["order_item_code"];
                this.columnorder_item_name = base.Columns["order_item_name"];
                this.columnorder_item_quantity = base.Columns["order_item_quantity"];
                this.columnorder_item_length = base.Columns["order_item_length"];
                this.columnorder_item_price = base.Columns["order_item_price"];
                this.columnorder_item_final_amount = base.Columns["order_item_final_amount"];
                this.columnorder_date = base.Columns["order_date"];
                this.columnorder_receiver_name = base.Columns["order_receiver_name"];
                this.columnorder_receiver_address = base.Columns["order_receiver_address"];
                this.columnorder_total_before_levy = base.Columns["order_total_before_levy"];
                this.columnorder_total_levy = base.Columns["order_total_levy"];
                this.columnorder_levy_per = base.Columns["order_levy_per"];
                this.columnorder_total_after_levy = base.Columns["order_total_after_levy"];
                this.columnorder_vat = base.Columns["order_vat"];
                this.columnorder_total_after_VAT = base.Columns["order_total_after_VAT"];
                this.columnorder_amount_paid = base.Columns["order_amount_paid"];
                this.columnorder_total_amount_due = base.Columns["order_total_amount_due"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnorder_item_id = new global::System.Data.DataColumn("order_item_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_item_id);
                this.columnorder_item_code = new global::System.Data.DataColumn("order_item_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_item_code);
                this.columnorder_item_name = new global::System.Data.DataColumn("order_item_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_item_name);
                this.columnorder_item_quantity = new global::System.Data.DataColumn("order_item_quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_item_quantity);
                this.columnorder_item_length = new global::System.Data.DataColumn("order_item_length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_item_length);
                this.columnorder_item_price = new global::System.Data.DataColumn("order_item_price", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_item_price);
                this.columnorder_item_final_amount = new global::System.Data.DataColumn("order_item_final_amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_item_final_amount);
                this.columnorder_date = new global::System.Data.DataColumn("order_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_date);
                this.columnorder_receiver_name = new global::System.Data.DataColumn("order_receiver_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_receiver_name);
                this.columnorder_receiver_address = new global::System.Data.DataColumn("order_receiver_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_receiver_address);
                this.columnorder_total_before_levy = new global::System.Data.DataColumn("order_total_before_levy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_before_levy);
                this.columnorder_total_levy = new global::System.Data.DataColumn("order_total_levy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_levy);
                this.columnorder_levy_per = new global::System.Data.DataColumn("order_levy_per", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_levy_per);
                this.columnorder_total_after_levy = new global::System.Data.DataColumn("order_total_after_levy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_after_levy);
                this.columnorder_vat = new global::System.Data.DataColumn("order_vat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_vat);
                this.columnorder_total_after_VAT = new global::System.Data.DataColumn("order_total_after_VAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_after_VAT);
                this.columnorder_amount_paid = new global::System.Data.DataColumn("order_amount_paid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_amount_paid);
                this.columnorder_total_amount_due = new global::System.Data.DataColumn("order_total_amount_due", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_total_amount_due);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorder_item_id}, true));
                this.columnorder_item_id.AutoIncrement = true;
                this.columnorder_item_id.AutoIncrementSeed = -1;
                this.columnorder_item_id.AutoIncrementStep = -1;
                this.columnorder_item_id.AllowDBNull = false;
                this.columnorder_item_id.ReadOnly = true;
                this.columnorder_item_id.Unique = true;
                this.columnorder_item_code.AllowDBNull = false;
                this.columnorder_item_name.AllowDBNull = false;
                this.columnorder_item_name.MaxLength = 50;
                this.columnorder_item_quantity.AllowDBNull = false;
                this.columnorder_item_length.AllowDBNull = false;
                this.columnorder_item_length.MaxLength = 10;
                this.columnorder_item_price.AllowDBNull = false;
                this.columnorder_item_price.MaxLength = 20;
                this.columnorder_item_final_amount.AllowDBNull = false;
                this.columnorder_item_final_amount.MaxLength = 20;
                this.columnorder_date.AllowDBNull = false;
                this.columnorder_date.MaxLength = 50;
                this.columnorder_receiver_name.AllowDBNull = false;
                this.columnorder_receiver_name.MaxLength = 50;
                this.columnorder_receiver_address.AllowDBNull = false;
                this.columnorder_receiver_address.MaxLength = 50;
                this.columnorder_total_before_levy.AllowDBNull = false;
                this.columnorder_total_before_levy.MaxLength = 10;
                this.columnorder_total_levy.AllowDBNull = false;
                this.columnorder_total_levy.MaxLength = 10;
                this.columnorder_levy_per.AllowDBNull = false;
                this.columnorder_levy_per.MaxLength = 10;
                this.columnorder_total_after_levy.AllowDBNull = false;
                this.columnorder_total_after_levy.MaxLength = 10;
                this.columnorder_vat.AllowDBNull = false;
                this.columnorder_vat.MaxLength = 10;
                this.columnorder_total_after_VAT.AllowDBNull = false;
                this.columnorder_total_after_VAT.MaxLength = 10;
                this.columnorder_amount_paid.AllowDBNull = false;
                this.columnorder_amount_paid.MaxLength = 10;
                this.columnorder_total_amount_due.AllowDBNull = false;
                this.columnorder_total_amount_due.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_order_itemRow Newinvoice_order_itemRow() {
                return ((invoice_order_itemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new invoice_order_itemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(invoice_order_itemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.invoice_order_itemRowChanged != null)) {
                    this.invoice_order_itemRowChanged(this, new invoice_order_itemRowChangeEvent(((invoice_order_itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.invoice_order_itemRowChanging != null)) {
                    this.invoice_order_itemRowChanging(this, new invoice_order_itemRowChangeEvent(((invoice_order_itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.invoice_order_itemRowDeleted != null)) {
                    this.invoice_order_itemRowDeleted(this, new invoice_order_itemRowChangeEvent(((invoice_order_itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.invoice_order_itemRowDeleting != null)) {
                    this.invoice_order_itemRowDeleting(this, new invoice_order_itemRowChangeEvent(((invoice_order_itemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removeinvoice_order_itemRow(invoice_order_itemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amcoDBDataSet2 ds = new amcoDBDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "invoice_order_itemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class invoice_orderRow : global::System.Data.DataRow {
            
            private invoice_orderDataTable tableinvoice_order;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal invoice_orderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvoice_order = ((invoice_orderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int order_id {
                get {
                    return ((int)(this[this.tableinvoice_order.order_idColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_date {
                get {
                    return ((string)(this[this.tableinvoice_order.order_dateColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_receiver_name {
                get {
                    return ((string)(this[this.tableinvoice_order.order_receiver_nameColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_receiver_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_receiver_address {
                get {
                    return ((string)(this[this.tableinvoice_order.order_receiver_addressColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_receiver_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_before_levy {
                get {
                    return ((string)(this[this.tableinvoice_order.order_total_before_levyColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_total_before_levyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_levy {
                get {
                    return ((string)(this[this.tableinvoice_order.order_total_levyColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_total_levyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_levy_per {
                get {
                    return ((string)(this[this.tableinvoice_order.order_levy_perColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_levy_perColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_after_levy {
                get {
                    return ((string)(this[this.tableinvoice_order.order_total_after_levyColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_total_after_levyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_vat {
                get {
                    return ((string)(this[this.tableinvoice_order.order_vatColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_vatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_after_VAT {
                get {
                    return ((string)(this[this.tableinvoice_order.order_total_after_VATColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_total_after_VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_amount_paid {
                get {
                    return ((string)(this[this.tableinvoice_order.order_amount_paidColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_amount_paidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_amount_due {
                get {
                    return ((string)(this[this.tableinvoice_order.order_total_amount_dueColumn]));
                }
                set {
                    this[this.tableinvoice_order.order_total_amount_dueColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class invoice_order_itemRow : global::System.Data.DataRow {
            
            private invoice_order_itemDataTable tableinvoice_order_item;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal invoice_order_itemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvoice_order_item = ((invoice_order_itemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int order_item_id {
                get {
                    return ((int)(this[this.tableinvoice_order_item.order_item_idColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_item_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int order_item_code {
                get {
                    return ((int)(this[this.tableinvoice_order_item.order_item_codeColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_item_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_item_name {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_item_nameColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_item_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int order_item_quantity {
                get {
                    return ((int)(this[this.tableinvoice_order_item.order_item_quantityColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_item_quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_item_length {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_item_lengthColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_item_lengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_item_price {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_item_priceColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_item_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_item_final_amount {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_item_final_amountColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_item_final_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_date {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_dateColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_receiver_name {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_receiver_nameColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_receiver_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_receiver_address {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_receiver_addressColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_receiver_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_before_levy {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_total_before_levyColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_total_before_levyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_levy {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_total_levyColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_total_levyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_levy_per {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_levy_perColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_levy_perColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_after_levy {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_total_after_levyColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_total_after_levyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_vat {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_vatColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_vatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_after_VAT {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_total_after_VATColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_total_after_VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_amount_paid {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_amount_paidColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_amount_paidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string order_total_amount_due {
                get {
                    return ((string)(this[this.tableinvoice_order_item.order_total_amount_dueColumn]));
                }
                set {
                    this[this.tableinvoice_order_item.order_total_amount_dueColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class invoice_orderRowChangeEvent : global::System.EventArgs {
            
            private invoice_orderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_orderRowChangeEvent(invoice_orderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_orderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class invoice_order_itemRowChangeEvent : global::System.EventArgs {
            
            private invoice_order_itemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_order_itemRowChangeEvent(invoice_order_itemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public invoice_order_itemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace amco.amcoDBDataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class invoice_orderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public invoice_orderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "invoice_order";
            tableMapping.ColumnMappings.Add("order_id", "order_id");
            tableMapping.ColumnMappings.Add("order_date", "order_date");
            tableMapping.ColumnMappings.Add("order_receiver_name", "order_receiver_name");
            tableMapping.ColumnMappings.Add("order_receiver_address", "order_receiver_address");
            tableMapping.ColumnMappings.Add("order_total_before_levy", "order_total_before_levy");
            tableMapping.ColumnMappings.Add("order_total_levy", "order_total_levy");
            tableMapping.ColumnMappings.Add("order_levy_per", "order_levy_per");
            tableMapping.ColumnMappings.Add("order_total_after_levy", "order_total_after_levy");
            tableMapping.ColumnMappings.Add("order_vat", "order_vat");
            tableMapping.ColumnMappings.Add("order_total_after_VAT", "order_total_after_VAT");
            tableMapping.ColumnMappings.Add("order_amount_paid", "order_amount_paid");
            tableMapping.ColumnMappings.Add("order_total_amount_due", "order_total_amount_due");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[invoice_order] WHERE (([order_id] = @Original_order_id) AND ([order_date] = @Original_order_date) AND ([order_receiver_name] = @Original_order_receiver_name) AND ([order_receiver_address] = @Original_order_receiver_address) AND ([order_total_before_levy] = @Original_order_total_before_levy) AND ([order_total_levy] = @Original_order_total_levy) AND ([order_levy_per] = @Original_order_levy_per) AND ([order_total_after_levy] = @Original_order_total_after_levy) AND ([order_vat] = @Original_order_vat) AND ([order_total_after_VAT] = @Original_order_total_after_VAT) AND ([order_amount_paid] = @Original_order_amount_paid) AND ([order_total_amount_due] = @Original_order_total_amount_due))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[invoice_order] ([order_date], [order_receiver_name], [order_receiver_address], [order_total_before_levy], [order_total_levy], [order_levy_per], [order_total_after_levy], [order_vat], [order_total_after_VAT], [order_amount_paid], [order_total_amount_due]) VALUES (@order_date, @order_receiver_name, @order_receiver_address, @order_total_before_levy, @order_total_levy, @order_levy_per, @order_total_after_levy, @order_vat, @order_total_after_VAT, @order_amount_paid, @order_total_amount_due);
SELECT order_id, order_date, order_receiver_name, order_receiver_address, order_total_before_levy, order_total_levy, order_levy_per, order_total_after_levy, order_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due FROM invoice_order WHERE (order_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[invoice_order] SET [order_date] = @order_date, [order_receiver_name] = @order_receiver_name, [order_receiver_address] = @order_receiver_address, [order_total_before_levy] = @order_total_before_levy, [order_total_levy] = @order_total_levy, [order_levy_per] = @order_levy_per, [order_total_after_levy] = @order_total_after_levy, [order_vat] = @order_vat, [order_total_after_VAT] = @order_total_after_VAT, [order_amount_paid] = @order_amount_paid, [order_total_amount_due] = @order_total_amount_due WHERE (([order_id] = @Original_order_id) AND ([order_date] = @Original_order_date) AND ([order_receiver_name] = @Original_order_receiver_name) AND ([order_receiver_address] = @Original_order_receiver_address) AND ([order_total_before_levy] = @Original_order_total_before_levy) AND ([order_total_levy] = @Original_order_total_levy) AND ([order_levy_per] = @Original_order_levy_per) AND ([order_total_after_levy] = @Original_order_total_after_levy) AND ([order_vat] = @Original_order_vat) AND ([order_total_after_VAT] = @Original_order_total_after_VAT) AND ([order_amount_paid] = @Original_order_amount_paid) AND ([order_total_amount_due] = @Original_order_total_amount_due));
SELECT order_id, order_date, order_receiver_name, order_receiver_address, order_total_before_levy, order_total_levy, order_levy_per, order_total_after_levy, order_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due FROM invoice_order WHERE (order_id = @order_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "order_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::amco.Properties.Settings.Default.cn;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT order_id, order_date, order_receiver_name, order_receiver_address, order_t" +
                "otal_before_levy, order_total_levy, order_levy_per, order_total_after_levy, orde" +
                "r_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due FROM dbo" +
                ".invoice_order";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amcoDBDataSet2.invoice_orderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amcoDBDataSet2.invoice_orderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amcoDBDataSet2.invoice_orderDataTable dataTable = new amcoDBDataSet2.invoice_orderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amcoDBDataSet2.invoice_orderDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amcoDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "invoice_order");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_order_id, string Original_order_date, string Original_order_receiver_name, string Original_order_receiver_address, string Original_order_total_before_levy, string Original_order_total_levy, string Original_order_levy_per, string Original_order_total_after_levy, string Original_order_vat, string Original_order_total_after_VAT, string Original_order_amount_paid, string Original_order_total_amount_due) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_order_id));
            if ((Original_order_date == null)) {
                throw new global::System.ArgumentNullException("Original_order_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_order_date));
            }
            if ((Original_order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_order_receiver_name));
            }
            if ((Original_order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_order_receiver_address));
            }
            if ((Original_order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_before_levy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_order_total_before_levy));
            }
            if ((Original_order_total_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_levy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_order_total_levy));
            }
            if ((Original_order_levy_per == null)) {
                throw new global::System.ArgumentNullException("Original_order_levy_per");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_order_levy_per));
            }
            if ((Original_order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_levy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_order_total_after_levy));
            }
            if ((Original_order_vat == null)) {
                throw new global::System.ArgumentNullException("Original_order_vat");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_order_vat));
            }
            if ((Original_order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_VAT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_order_total_after_VAT));
            }
            if ((Original_order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("Original_order_amount_paid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_order_amount_paid));
            }
            if ((Original_order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_amount_due");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_order_total_amount_due));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string order_date, string order_receiver_name, string order_receiver_address, string order_total_before_levy, string order_total_levy, string order_levy_per, string order_total_after_levy, string order_vat, string order_total_after_VAT, string order_amount_paid, string order_total_amount_due) {
            if ((order_date == null)) {
                throw new global::System.ArgumentNullException("order_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(order_date));
            }
            if ((order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("order_receiver_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(order_receiver_name));
            }
            if ((order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("order_receiver_address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(order_receiver_address));
            }
            if ((order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_before_levy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(order_total_before_levy));
            }
            if ((order_total_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_levy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(order_total_levy));
            }
            if ((order_levy_per == null)) {
                throw new global::System.ArgumentNullException("order_levy_per");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(order_levy_per));
            }
            if ((order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_after_levy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(order_total_after_levy));
            }
            if ((order_vat == null)) {
                throw new global::System.ArgumentNullException("order_vat");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(order_vat));
            }
            if ((order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("order_total_after_VAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(order_total_after_VAT));
            }
            if ((order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("order_amount_paid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(order_amount_paid));
            }
            if ((order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("order_total_amount_due");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(order_total_amount_due));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string order_date, 
                    string order_receiver_name, 
                    string order_receiver_address, 
                    string order_total_before_levy, 
                    string order_total_levy, 
                    string order_levy_per, 
                    string order_total_after_levy, 
                    string order_vat, 
                    string order_total_after_VAT, 
                    string order_amount_paid, 
                    string order_total_amount_due, 
                    int Original_order_id, 
                    string Original_order_date, 
                    string Original_order_receiver_name, 
                    string Original_order_receiver_address, 
                    string Original_order_total_before_levy, 
                    string Original_order_total_levy, 
                    string Original_order_levy_per, 
                    string Original_order_total_after_levy, 
                    string Original_order_vat, 
                    string Original_order_total_after_VAT, 
                    string Original_order_amount_paid, 
                    string Original_order_total_amount_due, 
                    int order_id) {
            if ((order_date == null)) {
                throw new global::System.ArgumentNullException("order_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(order_date));
            }
            if ((order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("order_receiver_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(order_receiver_name));
            }
            if ((order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("order_receiver_address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(order_receiver_address));
            }
            if ((order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_before_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(order_total_before_levy));
            }
            if ((order_total_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(order_total_levy));
            }
            if ((order_levy_per == null)) {
                throw new global::System.ArgumentNullException("order_levy_per");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(order_levy_per));
            }
            if ((order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_after_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(order_total_after_levy));
            }
            if ((order_vat == null)) {
                throw new global::System.ArgumentNullException("order_vat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(order_vat));
            }
            if ((order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("order_total_after_VAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(order_total_after_VAT));
            }
            if ((order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("order_amount_paid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(order_amount_paid));
            }
            if ((order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("order_total_amount_due");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(order_total_amount_due));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_order_id));
            if ((Original_order_date == null)) {
                throw new global::System.ArgumentNullException("Original_order_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_order_date));
            }
            if ((Original_order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_order_receiver_name));
            }
            if ((Original_order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_order_receiver_address));
            }
            if ((Original_order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_before_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_order_total_before_levy));
            }
            if ((Original_order_total_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_order_total_levy));
            }
            if ((Original_order_levy_per == null)) {
                throw new global::System.ArgumentNullException("Original_order_levy_per");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_order_levy_per));
            }
            if ((Original_order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_order_total_after_levy));
            }
            if ((Original_order_vat == null)) {
                throw new global::System.ArgumentNullException("Original_order_vat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_order_vat));
            }
            if ((Original_order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_VAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_order_total_after_VAT));
            }
            if ((Original_order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("Original_order_amount_paid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_order_amount_paid));
            }
            if ((Original_order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_amount_due");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_order_total_amount_due));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(order_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string order_date, 
                    string order_receiver_name, 
                    string order_receiver_address, 
                    string order_total_before_levy, 
                    string order_total_levy, 
                    string order_levy_per, 
                    string order_total_after_levy, 
                    string order_vat, 
                    string order_total_after_VAT, 
                    string order_amount_paid, 
                    string order_total_amount_due, 
                    int Original_order_id, 
                    string Original_order_date, 
                    string Original_order_receiver_name, 
                    string Original_order_receiver_address, 
                    string Original_order_total_before_levy, 
                    string Original_order_total_levy, 
                    string Original_order_levy_per, 
                    string Original_order_total_after_levy, 
                    string Original_order_vat, 
                    string Original_order_total_after_VAT, 
                    string Original_order_amount_paid, 
                    string Original_order_total_amount_due) {
            return this.Update(order_date, order_receiver_name, order_receiver_address, order_total_before_levy, order_total_levy, order_levy_per, order_total_after_levy, order_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due, Original_order_id, Original_order_date, Original_order_receiver_name, Original_order_receiver_address, Original_order_total_before_levy, Original_order_total_levy, Original_order_levy_per, Original_order_total_after_levy, Original_order_vat, Original_order_total_after_VAT, Original_order_amount_paid, Original_order_total_amount_due, Original_order_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class invoice_order_itemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public invoice_order_itemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "invoice_order_item";
            tableMapping.ColumnMappings.Add("order_item_id", "order_item_id");
            tableMapping.ColumnMappings.Add("order_item_code", "order_item_code");
            tableMapping.ColumnMappings.Add("order_item_name", "order_item_name");
            tableMapping.ColumnMappings.Add("order_item_quantity", "order_item_quantity");
            tableMapping.ColumnMappings.Add("order_item_length", "order_item_length");
            tableMapping.ColumnMappings.Add("order_item_price", "order_item_price");
            tableMapping.ColumnMappings.Add("order_item_final_amount", "order_item_final_amount");
            tableMapping.ColumnMappings.Add("order_date", "order_date");
            tableMapping.ColumnMappings.Add("order_receiver_name", "order_receiver_name");
            tableMapping.ColumnMappings.Add("order_receiver_address", "order_receiver_address");
            tableMapping.ColumnMappings.Add("order_total_before_levy", "order_total_before_levy");
            tableMapping.ColumnMappings.Add("order_total_levy", "order_total_levy");
            tableMapping.ColumnMappings.Add("order_levy_per", "order_levy_per");
            tableMapping.ColumnMappings.Add("order_total_after_levy", "order_total_after_levy");
            tableMapping.ColumnMappings.Add("order_vat", "order_vat");
            tableMapping.ColumnMappings.Add("order_total_after_VAT", "order_total_after_VAT");
            tableMapping.ColumnMappings.Add("order_amount_paid", "order_amount_paid");
            tableMapping.ColumnMappings.Add("order_total_amount_due", "order_total_amount_due");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[invoice_order_item] WHERE (([order_item_id] = @Original_order_item_id) AND ([order_item_code] = @Original_order_item_code) AND ([order_item_name] = @Original_order_item_name) AND ([order_item_quantity] = @Original_order_item_quantity) AND ([order_item_length] = @Original_order_item_length) AND ([order_item_price] = @Original_order_item_price) AND ([order_item_final_amount] = @Original_order_item_final_amount) AND ([order_date] = @Original_order_date) AND ([order_receiver_name] = @Original_order_receiver_name) AND ([order_receiver_address] = @Original_order_receiver_address) AND ([order_total_before_levy] = @Original_order_total_before_levy) AND ([order_total_levy] = @Original_order_total_levy) AND ([order_levy_per] = @Original_order_levy_per) AND ([order_total_after_levy] = @Original_order_total_after_levy) AND ([order_vat] = @Original_order_vat) AND ([order_total_after_VAT] = @Original_order_total_after_VAT) AND ([order_amount_paid] = @Original_order_amount_paid) AND ([order_total_amount_due] = @Original_order_total_amount_due))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_length", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_length", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_price", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_final_amount", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_final_amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[invoice_order_item] ([order_item_code], [order_item_name], [order_item_quantity], [order_item_length], [order_item_price], [order_item_final_amount], [order_date], [order_receiver_name], [order_receiver_address], [order_total_before_levy], [order_total_levy], [order_levy_per], [order_total_after_levy], [order_vat], [order_total_after_VAT], [order_amount_paid], [order_total_amount_due]) VALUES (@order_item_code, @order_item_name, @order_item_quantity, @order_item_length, @order_item_price, @order_item_final_amount, @order_date, @order_receiver_name, @order_receiver_address, @order_total_before_levy, @order_total_levy, @order_levy_per, @order_total_after_levy, @order_vat, @order_total_after_VAT, @order_amount_paid, @order_total_amount_due);
SELECT order_item_id, order_item_code, order_item_name, order_item_quantity, order_item_length, order_item_price, order_item_final_amount, order_date, order_receiver_name, order_receiver_address, order_total_before_levy, order_total_levy, order_levy_per, order_total_after_levy, order_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due FROM invoice_order_item WHERE (order_item_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_length", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_price", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_final_amount", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_final_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[invoice_order_item] SET [order_item_code] = @order_item_code, [orde" +
                "r_item_name] = @order_item_name, [order_item_quantity] = @order_item_quantity, [" +
                "order_item_length] = @order_item_length, [order_item_price] = @order_item_price," +
                " [order_item_final_amount] = @order_item_final_amount, [order_date] = @order_dat" +
                "e, [order_receiver_name] = @order_receiver_name, [order_receiver_address] = @ord" +
                "er_receiver_address, [order_total_before_levy] = @order_total_before_levy, [orde" +
                "r_total_levy] = @order_total_levy, [order_levy_per] = @order_levy_per, [order_to" +
                "tal_after_levy] = @order_total_after_levy, [order_vat] = @order_vat, [order_tota" +
                "l_after_VAT] = @order_total_after_VAT, [order_amount_paid] = @order_amount_paid," +
                " [order_total_amount_due] = @order_total_amount_due WHERE (([order_item_id] = @O" +
                "riginal_order_item_id) AND ([order_item_code] = @Original_order_item_code) AND (" +
                "[order_item_name] = @Original_order_item_name) AND ([order_item_quantity] = @Ori" +
                "ginal_order_item_quantity) AND ([order_item_length] = @Original_order_item_lengt" +
                "h) AND ([order_item_price] = @Original_order_item_price) AND ([order_item_final_" +
                "amount] = @Original_order_item_final_amount) AND ([order_date] = @Original_order" +
                "_date) AND ([order_receiver_name] = @Original_order_receiver_name) AND ([order_r" +
                "eceiver_address] = @Original_order_receiver_address) AND ([order_total_before_le" +
                "vy] = @Original_order_total_before_levy) AND ([order_total_levy] = @Original_ord" +
                "er_total_levy) AND ([order_levy_per] = @Original_order_levy_per) AND ([order_tot" +
                "al_after_levy] = @Original_order_total_after_levy) AND ([order_vat] = @Original_" +
                "order_vat) AND ([order_total_after_VAT] = @Original_order_total_after_VAT) AND (" +
                "[order_amount_paid] = @Original_order_amount_paid) AND ([order_total_amount_due]" +
                " = @Original_order_total_amount_due));\r\nSELECT order_item_id, order_item_code, o" +
                "rder_item_name, order_item_quantity, order_item_length, order_item_price, order_" +
                "item_final_amount, order_date, order_receiver_name, order_receiver_address, orde" +
                "r_total_before_levy, order_total_levy, order_levy_per, order_total_after_levy, o" +
                "rder_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due FROM " +
                "invoice_order_item WHERE (order_item_id = @order_item_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_length", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_price", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_final_amount", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_final_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_length", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_length", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_price", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_item_final_amount", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_final_amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_date", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_receiver_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_receiver_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_before_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_before_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_levy_per", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_levy_per", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_levy", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_levy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_vat", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_vat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_after_VAT", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_after_VAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_amount_paid", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_amount_paid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_order_total_amount_due", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "order_total_amount_due", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@order_item_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "order_item_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::amco.Properties.Settings.Default.cn;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT order_item_id, order_item_code, order_item_name, order_item_quantity, order_item_length, order_item_price, order_item_final_amount, order_date, order_receiver_name, order_receiver_address, order_total_before_levy, order_total_levy, order_levy_per, order_total_after_levy, order_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due FROM dbo.invoice_order_item";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amcoDBDataSet2.invoice_order_itemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amcoDBDataSet2.invoice_order_itemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amcoDBDataSet2.invoice_order_itemDataTable dataTable = new amcoDBDataSet2.invoice_order_itemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amcoDBDataSet2.invoice_order_itemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amcoDBDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "invoice_order_item");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_order_item_id, 
                    int Original_order_item_code, 
                    string Original_order_item_name, 
                    int Original_order_item_quantity, 
                    string Original_order_item_length, 
                    string Original_order_item_price, 
                    string Original_order_item_final_amount, 
                    string Original_order_date, 
                    string Original_order_receiver_name, 
                    string Original_order_receiver_address, 
                    string Original_order_total_before_levy, 
                    string Original_order_total_levy, 
                    string Original_order_levy_per, 
                    string Original_order_total_after_levy, 
                    string Original_order_vat, 
                    string Original_order_total_after_VAT, 
                    string Original_order_amount_paid, 
                    string Original_order_total_amount_due) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_order_item_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_order_item_code));
            if ((Original_order_item_name == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_order_item_name));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_order_item_quantity));
            if ((Original_order_item_length == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_length");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_order_item_length));
            }
            if ((Original_order_item_price == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_price");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_order_item_price));
            }
            if ((Original_order_item_final_amount == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_final_amount");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_order_item_final_amount));
            }
            if ((Original_order_date == null)) {
                throw new global::System.ArgumentNullException("Original_order_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_order_date));
            }
            if ((Original_order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_order_receiver_name));
            }
            if ((Original_order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_order_receiver_address));
            }
            if ((Original_order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_before_levy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_order_total_before_levy));
            }
            if ((Original_order_total_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_levy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_order_total_levy));
            }
            if ((Original_order_levy_per == null)) {
                throw new global::System.ArgumentNullException("Original_order_levy_per");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_order_levy_per));
            }
            if ((Original_order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_levy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_order_total_after_levy));
            }
            if ((Original_order_vat == null)) {
                throw new global::System.ArgumentNullException("Original_order_vat");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_order_vat));
            }
            if ((Original_order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_VAT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_order_total_after_VAT));
            }
            if ((Original_order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("Original_order_amount_paid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_order_amount_paid));
            }
            if ((Original_order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_amount_due");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_order_total_amount_due));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int order_item_code, 
                    string order_item_name, 
                    int order_item_quantity, 
                    string order_item_length, 
                    string order_item_price, 
                    string order_item_final_amount, 
                    string order_date, 
                    string order_receiver_name, 
                    string order_receiver_address, 
                    string order_total_before_levy, 
                    string order_total_levy, 
                    string order_levy_per, 
                    string order_total_after_levy, 
                    string order_vat, 
                    string order_total_after_VAT, 
                    string order_amount_paid, 
                    string order_total_amount_due) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(order_item_code));
            if ((order_item_name == null)) {
                throw new global::System.ArgumentNullException("order_item_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(order_item_name));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(order_item_quantity));
            if ((order_item_length == null)) {
                throw new global::System.ArgumentNullException("order_item_length");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(order_item_length));
            }
            if ((order_item_price == null)) {
                throw new global::System.ArgumentNullException("order_item_price");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(order_item_price));
            }
            if ((order_item_final_amount == null)) {
                throw new global::System.ArgumentNullException("order_item_final_amount");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(order_item_final_amount));
            }
            if ((order_date == null)) {
                throw new global::System.ArgumentNullException("order_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(order_date));
            }
            if ((order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("order_receiver_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(order_receiver_name));
            }
            if ((order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("order_receiver_address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(order_receiver_address));
            }
            if ((order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_before_levy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(order_total_before_levy));
            }
            if ((order_total_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_levy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(order_total_levy));
            }
            if ((order_levy_per == null)) {
                throw new global::System.ArgumentNullException("order_levy_per");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(order_levy_per));
            }
            if ((order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_after_levy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(order_total_after_levy));
            }
            if ((order_vat == null)) {
                throw new global::System.ArgumentNullException("order_vat");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(order_vat));
            }
            if ((order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("order_total_after_VAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(order_total_after_VAT));
            }
            if ((order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("order_amount_paid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(order_amount_paid));
            }
            if ((order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("order_total_amount_due");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(order_total_amount_due));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int order_item_code, 
                    string order_item_name, 
                    int order_item_quantity, 
                    string order_item_length, 
                    string order_item_price, 
                    string order_item_final_amount, 
                    string order_date, 
                    string order_receiver_name, 
                    string order_receiver_address, 
                    string order_total_before_levy, 
                    string order_total_levy, 
                    string order_levy_per, 
                    string order_total_after_levy, 
                    string order_vat, 
                    string order_total_after_VAT, 
                    string order_amount_paid, 
                    string order_total_amount_due, 
                    int Original_order_item_id, 
                    int Original_order_item_code, 
                    string Original_order_item_name, 
                    int Original_order_item_quantity, 
                    string Original_order_item_length, 
                    string Original_order_item_price, 
                    string Original_order_item_final_amount, 
                    string Original_order_date, 
                    string Original_order_receiver_name, 
                    string Original_order_receiver_address, 
                    string Original_order_total_before_levy, 
                    string Original_order_total_levy, 
                    string Original_order_levy_per, 
                    string Original_order_total_after_levy, 
                    string Original_order_vat, 
                    string Original_order_total_after_VAT, 
                    string Original_order_amount_paid, 
                    string Original_order_total_amount_due, 
                    int order_item_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(order_item_code));
            if ((order_item_name == null)) {
                throw new global::System.ArgumentNullException("order_item_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(order_item_name));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(order_item_quantity));
            if ((order_item_length == null)) {
                throw new global::System.ArgumentNullException("order_item_length");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(order_item_length));
            }
            if ((order_item_price == null)) {
                throw new global::System.ArgumentNullException("order_item_price");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(order_item_price));
            }
            if ((order_item_final_amount == null)) {
                throw new global::System.ArgumentNullException("order_item_final_amount");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(order_item_final_amount));
            }
            if ((order_date == null)) {
                throw new global::System.ArgumentNullException("order_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(order_date));
            }
            if ((order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("order_receiver_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(order_receiver_name));
            }
            if ((order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("order_receiver_address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(order_receiver_address));
            }
            if ((order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_before_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(order_total_before_levy));
            }
            if ((order_total_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(order_total_levy));
            }
            if ((order_levy_per == null)) {
                throw new global::System.ArgumentNullException("order_levy_per");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(order_levy_per));
            }
            if ((order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("order_total_after_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(order_total_after_levy));
            }
            if ((order_vat == null)) {
                throw new global::System.ArgumentNullException("order_vat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(order_vat));
            }
            if ((order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("order_total_after_VAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(order_total_after_VAT));
            }
            if ((order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("order_amount_paid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(order_amount_paid));
            }
            if ((order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("order_total_amount_due");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(order_total_amount_due));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_order_item_id));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_order_item_code));
            if ((Original_order_item_name == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_order_item_name));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_order_item_quantity));
            if ((Original_order_item_length == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_length");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_order_item_length));
            }
            if ((Original_order_item_price == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_price");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_order_item_price));
            }
            if ((Original_order_item_final_amount == null)) {
                throw new global::System.ArgumentNullException("Original_order_item_final_amount");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_order_item_final_amount));
            }
            if ((Original_order_date == null)) {
                throw new global::System.ArgumentNullException("Original_order_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_order_date));
            }
            if ((Original_order_receiver_name == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_order_receiver_name));
            }
            if ((Original_order_receiver_address == null)) {
                throw new global::System.ArgumentNullException("Original_order_receiver_address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_order_receiver_address));
            }
            if ((Original_order_total_before_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_before_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_order_total_before_levy));
            }
            if ((Original_order_total_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_order_total_levy));
            }
            if ((Original_order_levy_per == null)) {
                throw new global::System.ArgumentNullException("Original_order_levy_per");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_order_levy_per));
            }
            if ((Original_order_total_after_levy == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_levy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_order_total_after_levy));
            }
            if ((Original_order_vat == null)) {
                throw new global::System.ArgumentNullException("Original_order_vat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_order_vat));
            }
            if ((Original_order_total_after_VAT == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_after_VAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_order_total_after_VAT));
            }
            if ((Original_order_amount_paid == null)) {
                throw new global::System.ArgumentNullException("Original_order_amount_paid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_order_amount_paid));
            }
            if ((Original_order_total_amount_due == null)) {
                throw new global::System.ArgumentNullException("Original_order_total_amount_due");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_order_total_amount_due));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(order_item_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int order_item_code, 
                    string order_item_name, 
                    int order_item_quantity, 
                    string order_item_length, 
                    string order_item_price, 
                    string order_item_final_amount, 
                    string order_date, 
                    string order_receiver_name, 
                    string order_receiver_address, 
                    string order_total_before_levy, 
                    string order_total_levy, 
                    string order_levy_per, 
                    string order_total_after_levy, 
                    string order_vat, 
                    string order_total_after_VAT, 
                    string order_amount_paid, 
                    string order_total_amount_due, 
                    int Original_order_item_id, 
                    int Original_order_item_code, 
                    string Original_order_item_name, 
                    int Original_order_item_quantity, 
                    string Original_order_item_length, 
                    string Original_order_item_price, 
                    string Original_order_item_final_amount, 
                    string Original_order_date, 
                    string Original_order_receiver_name, 
                    string Original_order_receiver_address, 
                    string Original_order_total_before_levy, 
                    string Original_order_total_levy, 
                    string Original_order_levy_per, 
                    string Original_order_total_after_levy, 
                    string Original_order_vat, 
                    string Original_order_total_after_VAT, 
                    string Original_order_amount_paid, 
                    string Original_order_total_amount_due) {
            return this.Update(order_item_code, order_item_name, order_item_quantity, order_item_length, order_item_price, order_item_final_amount, order_date, order_receiver_name, order_receiver_address, order_total_before_levy, order_total_levy, order_levy_per, order_total_after_levy, order_vat, order_total_after_VAT, order_amount_paid, order_total_amount_due, Original_order_item_id, Original_order_item_code, Original_order_item_name, Original_order_item_quantity, Original_order_item_length, Original_order_item_price, Original_order_item_final_amount, Original_order_date, Original_order_receiver_name, Original_order_receiver_address, Original_order_total_before_levy, Original_order_total_levy, Original_order_levy_per, Original_order_total_after_levy, Original_order_vat, Original_order_total_after_VAT, Original_order_amount_paid, Original_order_total_amount_due, Original_order_item_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private invoice_orderTableAdapter _invoice_orderTableAdapter;
        
        private invoice_order_itemTableAdapter _invoice_order_itemTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public invoice_orderTableAdapter invoice_orderTableAdapter {
            get {
                return this._invoice_orderTableAdapter;
            }
            set {
                this._invoice_orderTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public invoice_order_itemTableAdapter invoice_order_itemTableAdapter {
            get {
                return this._invoice_order_itemTableAdapter;
            }
            set {
                this._invoice_order_itemTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._invoice_orderTableAdapter != null) 
                            && (this._invoice_orderTableAdapter.Connection != null))) {
                    return this._invoice_orderTableAdapter.Connection;
                }
                if (((this._invoice_order_itemTableAdapter != null) 
                            && (this._invoice_order_itemTableAdapter.Connection != null))) {
                    return this._invoice_order_itemTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._invoice_orderTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._invoice_order_itemTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(amcoDBDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._invoice_orderTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.invoice_order.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._invoice_orderTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._invoice_order_itemTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.invoice_order_item.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._invoice_order_itemTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(amcoDBDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._invoice_orderTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.invoice_order.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._invoice_orderTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._invoice_order_itemTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.invoice_order_item.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._invoice_order_itemTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(amcoDBDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._invoice_order_itemTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.invoice_order_item.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._invoice_order_itemTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._invoice_orderTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.invoice_order.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._invoice_orderTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(amcoDBDataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._invoice_orderTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._invoice_orderTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._invoice_order_itemTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._invoice_order_itemTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._invoice_orderTableAdapter != null)) {
                    revertConnections.Add(this._invoice_orderTableAdapter, this._invoice_orderTableAdapter.Connection);
                    this._invoice_orderTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._invoice_orderTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._invoice_orderTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._invoice_orderTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._invoice_orderTableAdapter.Adapter);
                    }
                }
                if ((this._invoice_order_itemTableAdapter != null)) {
                    revertConnections.Add(this._invoice_order_itemTableAdapter, this._invoice_order_itemTableAdapter.Connection);
                    this._invoice_order_itemTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._invoice_order_itemTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._invoice_order_itemTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._invoice_order_itemTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._invoice_order_itemTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._invoice_orderTableAdapter != null)) {
                    this._invoice_orderTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._invoice_orderTableAdapter]));
                    this._invoice_orderTableAdapter.Transaction = null;
                }
                if ((this._invoice_order_itemTableAdapter != null)) {
                    this._invoice_order_itemTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._invoice_order_itemTableAdapter]));
                    this._invoice_order_itemTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591